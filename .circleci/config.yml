version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.12.0 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: Define Environment Variable at Runtime
          command: |
            echo 'export SKIP_PREFLIGHT_CHECK=true' >> $BASH_ENV
            echo 'export NODE_PATH=/src' >> $BASH_ENV
            echo 'export NODE_OPTIONS=--max-old-space-size=2596' >> $BASH_ENV
            echo 'export REACT_APP_ETH_NETWORK=rinkeby' >> $BASH_ENV
            echo 'export REACT_APP_PRODUCTION=false' >> $BASH_ENV
            echo 'export REACT_APP_SENDBIRD_APP_ID=5C37E8D5-1425-4B2B-ADB5-16251995E685' >> $BASH_ENV
            echo 'export REACT_APP_SENDBIRD_CHANNEL_ID=sendbird_open_channel_51613_f8772d56dac01afcd52d678af9037c355546420f' >> $BASH_ENV
            echo 'export REACT_APP_API_MASTER=https://sandbox-ms-master.betprotocol.com' >> $BASH_ENV
            echo 'export REACT_APP_API_WITHDRAW=https://sandbox-ms-withdraw.betprotocol.com' >> $BASH_ENV
            echo 'export REACT_APP_APP_ID=5d67a9b07763de00238c0ae1' >> $BASH_ENV
            echo 'export REACT_APP_INFURA_API=https://rinkeby.infura.io/v3/811fe4fa5c4b41cb9b92f9656aaeaa3b' >> $BASH_ENV
            source $BASH_ENV
      - run: # run build
          name: build
          command: npm run build
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: test-results.xml
          prefix: tests
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: coverage
          prefix: coverage
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples